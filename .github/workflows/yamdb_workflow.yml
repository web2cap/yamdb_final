name: yamdb_workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        sudo apt install postgresql postgresql-contrib
        sudo systemctl start postgresql.service
        psql -d postgres -c 'create role yamdb with login;'
        psql -d postgres -c 'alter role yambd with encrypted password 'yambd';'
        psql -d postgres -c 'alter user yambd createdb;'
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r api_yamdb/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        pytest
        cd api_yamdb/
        python manage.py test
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          file: ./api_yamdb/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/yamdb_final_web:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd yamdb/
            docker compose stop yamdb_web
            docker compose rm yamdb_web -f
            docker image rm ${{ secrets.DOCKER_USERNAME }}/yamdb_final_web
            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo DB_USER=${{ secrets.DB_USER }} >> .env
            echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo ST_SECRET_KEY="${{ secrets.ST_SECRET_KEY }}" >> .env
            docker compose up -d 
            docker compose exec yamdb_web python manage.py migrate
            docker compose exec yamdb_web python manage.py collectstatic --no-input 
            docker compose exec yamdb_web python manage.py loaddata fixtures/fixtures.json
            docker compose exec yamdb_web mv forstatic/redoc.yaml static/redoc.yaml
            docker compose exec yamdb_web rm -r forstatic/

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} Completed successfully! 